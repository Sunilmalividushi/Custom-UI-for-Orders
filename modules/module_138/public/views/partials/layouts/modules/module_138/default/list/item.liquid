<form>
  <input id="frequencyStatus{{this.id}}" class="frequencyStatus" type="hidden" value="{% if this['Frequency'] == 'Infinite' %}Infinite times{% elsif this['Frequency'] == 'Once Per Day' %}1{% elsif this['Frequency'] == 'Once Per Week' %}7{% elsif this['Frequency'] == 'Once Per Month' %}30{% elsif this['Frequency'] == 'Once Per Year' %}365{% endif %}" />
</form>

  {% if this['Select Event'] != "On Page Load" and this['Trigger Button Class'] != blank  %}
      <script>
     
        var openPopupButton = document.querySelector('.{{this['Trigger Button Class']}}');
    
        function openPopup(){
          Swal.fire({
          title: "{{this['Popup Title']}}",
          icon: false,
          html: `
            {% if this['Image'] != blank %}
            <img class="mw-100 mb-4"  src="{{this['Image'] | asset_url }}" />
            {% endif %}
            {{this['Popup Description']}}
          `,
          showCloseButton: {{this['Show Close Button'] | default: true, allow_false: true }},
          showCancelButton: {{this['Show Cancel Button'] | default: true, allow_false: true }},
          cancelButtonColor: "{{this['Cancel Button Color'] | default: '#d33'}}",
          cancelButtonText: "{{this['Cancel Button Text'] | default: 'Cancel'}}",
          position: "{{this['Position'] | downcase}}",
          showConfirmButton: false, // There won't be any confirm button
          focusConfirm: false,
          allowOutsideClick: false
          });
        }
        
        openPopupButton.addEventListener('click', openPopup);
      </script>
    
  {% else %}
  
     <script>
     
       function openPopup{{this.id}} () {
          if (getCookie('displayedPopup{{this.id}}')) {
            return;
          }
          Swal.fire({
          title: "{{this['Popup Title']}}",
          icon: false,
          html: `
            {% if this['Image'] != blank %}
            <img class="mw-100"  src="{{this['Image'] | asset_url }}" />
            {% endif %}
            {{this['Popup Description']}}
          `,
          showCloseButton: {{this['Show Close Button'] | default: true, allow_false: true }},
          showCancelButton: {{this['Show Cancel Button'] | default: true, allow_false: true }},
          cancelButtonColor: "{{this['Cancel Button Color'] | default: '#d33'}}",
          cancelButtonText: "{{this['Cancel Button Text'] | default: 'Cancel'}}",
          position: "{{this['Position'] | downcase}}",
          showConfirmButton: false, // There won't be any confirm button
          focusConfirm: false,
          allowOutsideClick: false
        });
        var timeframe = document.getElementById('frequencyStatus{{this.id}}').value
        
        if(timeframe != "Infinite times"){
          var date = new Date(Date.now() + ((timeframe * 24 * 60 * 60)*1000));
        }else{
          var date = new Date(Date.now());
        }
        
        date = date.toUTCString();
                     
        document.cookie = "displayedPopup{{this.id}}=yes;expires="+date;  
       }
       
       document.addEventListener('DOMContentLoaded', openPopup{{this.id}});
     </script>
  
  {% endif %}
  